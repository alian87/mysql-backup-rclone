# MySQL Backup with Rclone - Example Docker Compose
# Copy this file to docker-compose.yml and customize for your needs

version: '3.8'

services:
  mysql-backup:
    image: yourusername/mysql-backup-rclone:latest
    container_name: mysql-backup-rclone
    restart: unless-stopped
    
    environment:
      # MySQL Configuration - REQUIRED
      MYSQL_HOST: "your-mysql-host"
      MYSQL_PORT: 3306
      MYSQL_USER: "your-mysql-user"
      MYSQL_PASSWORD: "your-mysql-password"
      MYSQL_DATABASES: "database1,database2,database3"
      
      # Rclone Configuration - REQUIRED
      RCLONE_REMOTE: "gdrive:backups/mysql"
      
      # Backup Configuration - OPTIONAL
      CRON_SCHEDULE: "0 2 * * *"  # Daily at 2 AM
      BACKUP_RETENTION: 7          # Keep 7 local backups
      TZ: "America/Sao_Paulo"      # Timezone
      LOG_LEVEL: "INFO"            # Log level: DEBUG, INFO, WARN, ERROR
      
      # Webhook Notifications - OPTIONAL
      # WEBHOOK_URL: "https://hooks.slack.com/services/YOUR/WEBHOOK/URL"
    
    volumes:
      # Rclone configuration - REQUIRED
      - rclone_config:/root/.config/rclone
      
      # Backup storage - OPTIONAL (for persistence)
      - backup_data:/backup
      
      # Logs - OPTIONAL (for persistence)
      - ./logs:/var/log
    
    networks:
      - mysql-network
    
    healthcheck:
      test: ["CMD-SHELL", "test -f /var/log/cron.log && pgrep cron > /dev/null"]
      interval: 1m
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  rclone_config:
    driver: local
  backup_data:
    driver: local

networks:
  mysql-network:
    driver: bridge
